name: Build LaTeX document
on: [push]
jobs:
  build_latex:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v3
      - name: Compile LaTeX document
        uses: xu-cheng/latex-action@v3
        with:
          root_file: document.tex
          extra_system_packages: "inkscape"
          args: -f -jobname=document -pdf -file-line-error -shell-escape -interaction=nonstopmode -synctex=1
      - name: Upload PDF file
        uses: actions/upload-artifact@v3
        with:
          name: PDF
          path: document.pdf
      - name: Create Release
        uses: actions/create-release@v1
        id: create_release
        env:
          # По офф.документации, надо указать GITHUB_TOKEN
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions
        with:
          # Берем результат из step с id=vars (см. выше). 
          # Получим теги вида “my_doc-<дата билда>-<первые 8 символов из sha коммита>
          tag_name: document-${{ steps.vars.outputs.date }}-${{ steps.vars.outputs.sha8 }}
          # Имя, которое будет высвечиваться в релизе
          release_name: Build (version ${{ steps.vars.outputs.date }})
          # Наш релиз не набросок и не пререлиз, так что оба в false
          draft: false
          prerelease: false
      # Прикладываемые файлы надо заливать отдельным step
      - name: Upload pdf asset
        uses: actions/upload-release-asset@v1
        env:
          # Тоже требуется токен
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # Из предыдущего step с id=create_release генерится upload_url — по нему и надо заливать
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          # Не переходим в папку latex_sources, поскольку download-artifacts грузит в текущую директорию
          asset_path: ./document.pdf
          # Имя, которое будет высвечиваться в релизе
          asset_name: document.pdf
          asset_content_type: application/pdf
